<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.spring.daos.BookMapper">
    <resultMap id="BaseResultMap" type="com.example.spring.pojo.BookModel">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="bookName" jdbcType="VARCHAR" property="bookName" />
        <result column="bookNumber" jdbcType="VARCHAR" property="bookNumber" />
        <result column="bookAmount" jdbcType="INTEGER" property="bookAmount" />
        <result column="bookStatus" jdbcType="INTEGER" property="bookStatus" />
        <result column="bookYear" jdbcType="TIMESTAMP" property="bookYear" />
        <result column="bookAuth" jdbcType="VARCHAR" property="bookAuth" />
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
        <result column="updaterTime" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <resultMap id="JoinMap" type="com.example.spring.pojo.BookModel">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="bookName" jdbcType="VARCHAR" property="bookName"/>
        <result column="bookNumber" jdbcType="VARCHAR" property="bookNumber" />
        <result column="bookAmount" jdbcType="INTEGER" property="bookAmount" />
        <result column="bookStatus" javaType="INTEGER" property="bookstatus"/>
        <collection property="userLists" javaType="ArrayList" ofType="com.example.spring.pojo.UserList">
            <result column="id" property="id"/>
            <result column="book_id" property="bookId"/>
            <result column="username" property="username"/>
            <result column="phone" property="phone"/>
            <result column="password" property="password"/>
            <result column="sex" property="sex"/>
            <result column="status" property="status"/>
            <result column="create_time" property="createTime"/>
            <result column="update_time" property="updateTime"/>
        </collection>
    </resultMap>
    <sql id="GetFields">
        id,bookname,booknumber,bookamount,bookstatus,bookyear,bookauth,create_time,update_time
    </sql>
    <insert id="saves" parameterType="com.example.spring.pojo.BookModel">
        insert into book (id,bookName,bookNumber,bookAmount,bookStatus,bookYear,bookAuth)
        values (#{id,jdbcType=INTEGER},#{bookName,jdbcType=VARCHAR},#{bookNumber, jdbcType=VARCHAR}, #{bookAmount, jdbcType=INTEGER}, #{bookStatus,jdbcType=INTEGER},
                #{bookYear,jdbcType=TIMESTAMP},#{bookAuth, jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.spring.pojo.BookModel">
        insert into book
        <trim prefix="(" suffix=")" prefixOverrides=",">
            <if test="id !=null">
                id,
            </if>
            <if test="bookName!=null">
                bookName,
            </if>
            <if test="bookNumber != null">
                bookNumber,
            </if>
            <if test="bookAmount != null">
                bookAmount,
            </if>
            <if test="bookStatus != null">
                bookStatus,
            </if>
            <if test="bookYear != null">
                bookYear,
            </if>
            <if test="bookAmount != null">
                bookAmount
            </if>
            <if test="bookAuth != null">
                bookAuth
            </if>
        </trim>
        <trim prefix="(" suffix=")" prefixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER}
            </if>
            <if test="bookName!=null">
                #{bookName,jdbcType=VARCHAR}
            </if>
            <if test="bookNumber != null">
                #{bookNumber,jdbcType=VARCHAR},
            </if>
            <if test="bookAmount != null">
                #{bookAmount,jdbcType=INTEGER},
            </if>
            <if test="bookStatus != null">
                #{bookStatus,jdbcType=INTEGER},
            </if>
            <if test="bookYear != null">
                #{bookYear,jdbcType=TIMESTAMP},
            </if>
            <if test="bookAuth != null">
                bookAuth = #{bookAuth,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>
    <select id="getAll" parameterType="com.example.spring.daos.BookMapper" resultMap="BaseResultMap">
        select
        <include refid="GetFields" />
        from book;
    </select>
    <update id="updateInfo" parameterType="com.example.spring.daos.BookMapper">
        update book
        <set>
            <if test="bookName != null">
               bookName = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookNumber != null">
                bookNumber = #{bookNumber,jdbcType=VARCHAR},
            </if>
            <if test="bookAmount != null">
                bookAmount = #{bookAmount,jdbcType=INTEGER},
            </if>
            <if test="bookStatus != null">
                bookStatus = #{bookStatus,jdbcType=INTEGER},
            </if>
            <if test="bookYear != null">
                bookYear = #{bookYear,jdbcType=DATE},
            </if>
            <if test="bookAuth != null">
               bookAuth = #{bookAuth,jdbcType=VARCHAR},
            </if>
        </set>
                where id = #{id}
    </update>
    <delete id="delBook">
        delete from book where id = #{id,jdbcType=INTEGER}
    </delete>
    <update id="softDel" parameterType="com.example.spring.daos.BookMapper">
        update book set bookStatus = 0 where id=#{id,jdbcType=INTEGER}
    </update>
    <select id="selectBy" parameterType="com.example.spring.daos.BookMapper" resultMap="BaseResultMap">
        select
            <include refid="GetFields"/>
        from book
        <where>
            <if test="bookName != null">
                bookName like concat(concat("%",#{bookName}),"%")
            </if>
            <if test="bookAuth != null">
               and bookAuth like concat(concat("%",#{bookAuth}),"%")
            </if>
            <if test="bookNumber != null">
               and bookNumber = #{bookNumber,jdbcType=VARCHAR}
            </if>
            <if test="bookStatus != 0">
                and bookStatus = #{bookStatus,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="getByUser" resultMap="JoinMap">
        SELECT book.id,book.bookName,book.bookNumber,book.bookAmount, user_list.* from book
        left join user_list on book.id = user_list.book_id where book.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getByname" resultMap="BaseResultMap">
        select <include refid="GetFields"/>
        from book
        <where>
            <if test="bookName != null">
                bookName like concat(concat("%",#{bookName}),"%")
            </if>
        </where>
    </select>
</mapper>
